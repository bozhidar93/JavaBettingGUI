
import static java.lang.Double.parseDouble;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import static jdk.nashorn.internal.objects.NativeMath.round;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author bozhidar
 */
public class Main extends javax.swing.JFrame {

    private int checkArray = -1;
    private int counterForSwitch = 0;
    private double potentialReturnsOdds;
    private String executeStatement;
    private static Connection conn;
    private static Statement stmt;
    private double stake1;
    private int betID = (int) (Math.random() * (99999999 - 1)) + 1;
    private int multipleBetIndex = 1;
    private int singleBetIndex = 99999999;
    private int countNumberOfBets = 0;
    
    
    public Main() throws SQLException {
        
        user.closeConnecton();
        initComponents();
        this.setLocationRelativeTo(this);
        //user.makeConnection();
        this.mainWellcomeText.setText(" WELLCOME  " + user.getUsername() + "  your balance is  " + user.getBalance());
        //stake1 = Double.parseDouble(this.stakeInput.getText());
                
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        mainAddBet = new javax.swing.JButton();
        mainHelp = new javax.swing.JButton();
        mainExit = new javax.swing.JButton();
        mainSearchBet = new javax.swing.JButton();
        mainWellcomeText = new javax.swing.JTextField();
        stakeInput = new javax.swing.JTextField();
        mainPlaceBet = new javax.swing.JButton();
        potentialReturnsText = new javax.swing.JTextField();
        mainTeamList = new java.awt.List();
        mainBetTypes = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();

        jButton3.setText("Add Bet");

        jButton5.setText("Add Bet");

        jButton6.setText("Add Bet");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        mainAddBet.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        mainAddBet.setText("Add Bet");
        mainAddBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainAddBetActionPerformed(evt);
            }
        });

        mainHelp.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        mainHelp.setText("Help");
        mainHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainHelpActionPerformed(evt);
            }
        });

        mainExit.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        mainExit.setText("Exit");
        mainExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainExitActionPerformed(evt);
            }
        });

        mainSearchBet.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        mainSearchBet.setText("Search Bet");
        mainSearchBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSearchBetActionPerformed(evt);
            }
        });

        mainWellcomeText.setEditable(false);
        mainWellcomeText.setBackground(new java.awt.Color(255, 255, 255));
        mainWellcomeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainWellcomeTextActionPerformed(evt);
            }
        });

        stakeInput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClick1(evt);
            }
        });
        stakeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stakeInputActionPerformed(evt);
            }
        });

        mainPlaceBet.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        mainPlaceBet.setText("Place Bet");
        mainPlaceBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainPlaceBetActionPerformed(evt);
            }
        });

        potentialReturnsText.setEditable(false);
        potentialReturnsText.setBackground(new java.awt.Color(255, 255, 255));
        potentialReturnsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                potentialReturnsTextActionPerformed(evt);
            }
        });

        mainTeamList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainTeamList.setMultipleMode(true);
        mainTeamList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainTeamListMouseClicked(evt);
            }
        });
        mainTeamList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainTeamListActionPerformed(evt);
            }
        });

        mainBetTypes.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Stake Amount:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Your Potentual Returns");

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clearButton.setText("Clear Bet Section");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mainTeamList, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainBetTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(clearButton))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(potentialReturnsText)
                            .addComponent(stakeInput)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(mainPlaceBet))))
                    .addComponent(mainWellcomeText, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mainAddBet, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mainSearchBet, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(mainHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(mainExit, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(mainHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainExit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainSearchBet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainAddBet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(mainWellcomeText, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stakeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(potentialReturnsText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainPlaceBet, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))
                    .addComponent(mainTeamList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainBetTypes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mainBetTypes.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainWellcomeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainWellcomeTextActionPerformed
        // TODO add your handling code here:
       
       
        
    }//GEN-LAST:event_mainWellcomeTextActionPerformed

    private void mainExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mainExitActionPerformed

    private void mainHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainHelpActionPerformed
        // TODO add your handling code here:
        //this.setVisible(false);
        Help h = new Help();
        h.setVisible(true);
    }//GEN-LAST:event_mainHelpActionPerformed

    private void mainAddBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainAddBetActionPerformed
        AddBet addBet;
        try {
            addBet = new AddBet();
            addBet.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_mainAddBetActionPerformed

    private void mainSearchBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchBetActionPerformed
        SearchBet sb;
        try {
            sb = new SearchBet();
            sb.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_mainSearchBetActionPerformed

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        
    }//GEN-LAST:event_jPanel1MousePressed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
       
    }//GEN-LAST:event_formMouseEntered

    private void potentialReturnsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_potentialReturnsTextActionPerformed
        
    }//GEN-LAST:event_potentialReturnsTextActionPerformed

    private void mouseClick1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClick1
        // TODO add your handling code here:
        this.stakeInput.setText("");

    }//GEN-LAST:event_mouseClick1

    private void stakeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stakeInputActionPerformed
        
    }//GEN-LAST:event_stakeInputActionPerformed

    private void mainTeamListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainTeamListActionPerformed
       
    }//GEN-LAST:event_mainTeamListActionPerformed

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered

               if( checkArray < AddBet.arrayInteger){
               mainTeamList.add(AddBet.betList[AddBet.arrayInteger].getBet1(), AddBet.arrayInteger);
               checkArray++;
               }
               if(counterForSwitch < mainTeamList.getItemCount()){
               switch (mainTeamList.getItemCount()) {
                   case 1:
                       mainBetTypes.add("Single", 0);              
                     counterForSwitch++;
                     countNumberOfBets++;
                       break;                           
                   case 2:
                       mainBetTypes.add("Double", 1);
                       counterForSwitch++;
                       countNumberOfBets++;
                       break;
                   case 3:
                       mainBetTypes.add("Treble", 2);
                       counterForSwitch++;
                       countNumberOfBets++;
                       break;
                   case 4:
                       mainBetTypes.add("Fourfold", 3);
                       counterForSwitch++;
                       countNumberOfBets++;
                       break;
                   case 5:
                       mainBetTypes.add("Fivefold", 4);
                       counterForSwitch++;
                       countNumberOfBets++;
                       break;
                   case 6:
                       mainBetTypes.add("Sixfold", 5);
                       counterForSwitch++;
                       countNumberOfBets++;
                       break;
                   default:
                       System.out.println("..");
                       break;

               }
               }
                 if(stakeInput.getText().equals("") == false){ 
                     double c =1.00;
                 int[] selectedItems = mainTeamList.getSelectedIndexes();                  
                 for(int i = 0; i<selectedItems.length;i++){                     
                 //    double c =1.00;
                    potentialReturnsOdds = 1.00;
                   // round(potentialReturnsOdds, 2); 
                     System.out.println("111111111111111   "+potentialReturnsOdds + "<>" + c);
                     c = c*AddBet.betList[i].getOdds1();
                     System.out.println("AddBet.betList[i].getOdds1();    " + AddBet.betList[i].getOdds1());
                     System.out.println("222222222222222   " + c);
                      round(c, 2); 
                      System.out.println("33333333333333   " + c);
                     potentialReturnsOdds = c;
                     round(potentialReturnsOdds, 2);  
                     System.out.println("44444444444444   " + potentialReturnsOdds);
                 }
                 this.potentialReturnsText.setText("Potentual Returs");
                 stake1 = 1.00;
                 stake1 = stake1*Double.parseDouble(stakeInput.getText());
                round(stake1, 2);
                     System.out.println("5555555555555stake1  " + stake1);
                     System.out.println("666666666666666potentialReturnsOdds + " +potentialReturnsOdds);
                round(potentialReturnsOdds,2);
                     System.out.println("77777777777777777     + ..    " +potentialReturnsOdds);                     
                double d =stake1*potentialReturnsOdds;
                round(d, 2);
                     System.out.println("88888888888888888double d  " +d);                
                round(d, 2);
                System.out.println("99999999999999     " +d);
                round(d, 2);
                  System.out.println("1010101010      " +d);                     
                 this.potentialReturnsText.setText(""+d);
               }
              
    }//GEN-LAST:event_jPanel1MouseEntered

    private void mainPlaceBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainPlaceBetActionPerformed
       if(stakeInput.getText().equals("") == false){
        String betStatus = "";
        int bet_returns = 0;
        stake1 = 1;
        stake1 = Double.parseDouble(stakeInput.getText());
        round(stake1, 2);
        try {
            conn = DriverManager.getConnection(user.getConnectionURL(), user.getConnectionUsername(), user.getConnectionPassword());
            stmt = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            ResultSet rs = stmt.executeQuery("SELECT multipleBetIndex FROM Bet");
            while (rs.next()) {
                if (multipleBetIndex == rs.getInt("multipleBetIndex")) {
                    multipleBetIndex++;
                }
                if (singleBetIndex == rs.getInt("multipleBetIndex")) {
                    singleBetIndex--;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("multipleBetIndex ID " + multipleBetIndex);
        System.out.println("singleBetIndex ID " + singleBetIndex);

        try {
           for(int x= 0;x<countNumberOfBets;x++){
               java.sql.Timestamp date = new java.sql.Timestamp(new java.util.Date().getTime());
               System.out.println("data" + date);
               System.out.println("X" + x);
               System.out.println("countNumberOfBets" + countNumberOfBets);
               if(countNumberOfBets ==1){               
            System.out.println("CREATING A BET WITH BETID " + AddBet.betList[x].getBetID1() + "USER ID " + user.getUser_ID() + "GAME ID" + AddBet.betList[x].getGameID1() + "TEAM1 " + AddBet.betList[x].getTeam11() + "TEAM2 " + AddBet.betList[x].getTeam21() + "BET" + AddBet.betList[x].getBet1() + "STAKE" + stake1 + "potentialReturnsOdds" + potentialReturnsOdds + "betStatus" + betStatus + "bet_returns " + bet_returns + "singleBetIndex" + singleBetIndex+ "date  "+ date);
            executeStatement = "INSERT INTO Bet " + "VALUES (" + AddBet.betList[x].getBetID1() + "," + user.getUser_ID() + "," + AddBet.betList[x].getGameID1() + ",'" + AddBet.betList[x].getTeam11() + "','" + AddBet.betList[x].getTeam21() + "','" + AddBet.betList[x].getBet1() + "'," + stake1 + "," + potentialReturnsOdds + ",'" + betStatus + "'," + bet_returns + "," + singleBetIndex+",'"+date + "')";
            stmt.executeUpdate(executeStatement);
               }
               else{
                   System.out.println("I AM HERE<<<<<<<<<<<<>>>>>>>>>>>>>>>>>" + x);
            System.out.println("CREATING A BET WITH BETID " + AddBet.betList[x].getBetID1() + "USER ID " + user.getUser_ID() + "GAME ID" + AddBet.betList[x].getGameID1() + "TEAM1 " + AddBet.betList[x].getTeam11() + "TEAM2 " + AddBet.betList[x].getTeam21() + "BET" + AddBet.betList[x].getBet1() + "STAKE" + stake1 + "potentialReturnsOdds" + potentialReturnsOdds + "betStatus" + betStatus + "bet_returns " + bet_returns + "multipleBetIndex" + multipleBetIndex+ "date " + date);
            executeStatement = "INSERT INTO Bet " + "VALUES (" + AddBet.betList[x].getBetID1() + "," + user.getUser_ID() + "," + AddBet.betList[x].getGameID1() + ",'" + AddBet.betList[x].getTeam11() + "','" + AddBet.betList[x].getTeam21() + "','" + AddBet.betList[x].getBet1() + "'," + stake1 + "," + potentialReturnsOdds + ",'" + betStatus + "'," + bet_returns + "," + multipleBetIndex+",'"+date + "')";
            stmt.executeUpdate(executeStatement);
            
               
           }
           }
            //    this.success.setText("Request send seccesfully and wil be resolved shortly.");
        } catch (SQLException ex) {
            System.out.println("executeUpdateERRROOOR");
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            user.closeConnecton();
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
       else{
           this.stakeInput.setText("PLEASE ENTER STAKE");
       }

    }//GEN-LAST:event_mainPlaceBetActionPerformed

    private void mainTeamListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTeamListMouseClicked
        
    }//GEN-LAST:event_mainTeamListMouseClicked

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        this.mainTeamList.removeAll();
        this.mainBetTypes.removeAll();
        counterForSwitch = 0;
    }//GEN-LAST:event_clearButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mainAddBet;
    private java.awt.List mainBetTypes;
    private javax.swing.JButton mainExit;
    private javax.swing.JButton mainHelp;
    private javax.swing.JButton mainPlaceBet;
    private javax.swing.JButton mainSearchBet;
    private java.awt.List mainTeamList;
    private javax.swing.JTextField mainWellcomeText;
    private javax.swing.JTextField potentialReturnsText;
    private javax.swing.JTextField stakeInput;
    // End of variables declaration//GEN-END:variables
}
